{"version":3,"sources":["components/EditCourseModal.tsx","assets/x.svg","components/Course.tsx","components/EditSemesterModal.tsx","components/AddCourseModal.tsx","components/Semester.tsx","components/WelcomeMsg.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EditCourseModal","ogClass","currClasses","visible","setVisible","setCurrCourse","React","useState","id","courseId","setCourseId","name","courseName","setCourseName","description","courseDesc","setCourseDesc","credits","courseCred","setCourseCred","prereqs","coursePreR","setCoursePreR","hide","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","as","rows","value","onChange","ev","target","Number","Footer","Button","variant","onClick","editClass","cIdx","index","length","newClasses","Course","course","currCourses","setCurrCourses","Row","Col","className","newCourses","concat","src","x","alt","EditSemesterModal","classYear","season","setClassYear","setSeason","AddCourseModal","newClass","Semester","addCourseVisible","setAddCourseVisible","setCurrClasses","map","c","WelcomeMsg","displayWelcome","setDisplayWelcome","Alert","App","semesterCnt","setSemesterCnt","cnt","year","currSemesters","setCurrSemesters","newSeason","newYear","newSem","semPop","pop","s","semID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63006b37.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { Class } from \"../interfaces/course\";\n\nexport function EditCourseModal({ogClass, currClasses, visible, setVisible, setCurrCourse} :\n    {ogClass: Class, currClasses:Class[], visible: boolean, setVisible: (b: boolean) => void, setCurrCourse: (c:Class[]) => void }) : JSX.Element {\n    //console.log(\"in EditCourseModal with course: \", ogClass.id);\n    //console.log(\"Curr Classes length: \", currClasses.length);\n    const [courseId, setCourseId] = React.useState<string>(ogClass.id);\n    const [courseName, setCourseName] = React.useState<string>(ogClass.name);\n    const [courseDesc, setCourseDesc] = React.useState<string>(ogClass.description);\n    const [courseCred, setCourseCred] = React.useState<number>(ogClass.credits);\n    const [coursePreR, setCoursePreR] = React.useState<string>(ogClass.prereqs);\n\n\n    function saveEdit() {\n        const editClass:Class = {name: courseName, id:courseId, description: courseDesc, credits: courseCred, prereqs: coursePreR};\n        let cIdx = -1;//index of edit class set to -1 for test purposes. If ogClass id is not in the currentClasses\n        for (let index = 0; index < currClasses.length; index++) {\n            if (currClasses[index].id === ogClass.id) {\n                //console.log(\"Found the matching course at idx=\", index);\n                cIdx = index;\n                break;\n            }\n        }\n        const newClasses:Class[] = [...currClasses];\n        newClasses[cIdx] = editClass;\n        //console.log(\"Length of newClasses:\", newClasses.length);\n        for (let index = 0; index < newClasses.length; index++) {\n            //console.log(\"ID: \", newClasses[index].id);\n            //console.log(\"Type: \", typeof newClasses[index]);\n            \n        }\n\n        setCurrCourse(newClasses);\n        setVisible(false);\n    }\n    //console.log(\"Modal Course: \", ogClass.id);\n\n    const hide = () => setVisible(false);\n\n    return (\n        <Modal show={visible} onHide={hide}>\n            <Modal.Header closeButton>\n                <Modal.Title>Edit Course</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseId\">Course ID</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseId} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseId(ev.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseName\">Course Name</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseName} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseName(ev.target.value)}> </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseDesc\">Course Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseDesc} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseDesc(ev.target.value)}> </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseCred\">Course Credits</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseCred} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseCred(Number(ev.target.value))}> </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CoursePreR\">Course Pre Requisits</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={coursePreR} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCoursePreR(ev.target.value)}> </Form.Control>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={hide}>Close</Button>\n                <Button variant=\"primary\" onClick={saveEdit}>Edit Course</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n\n}\n","export default __webpack_public_path__ + \"static/media/x.98fe98fc.svg\";","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Class } from \"../interfaces/course\";\nimport { EditCourseModal } from \"./EditCourseModal\";\nimport x from \"../assets/x.svg\";\n\nfunction Course({course, currCourses, setCurrCourses} : {course:Class, currCourses:Class[], setCurrCourses:(courses:Class[]) => void}): JSX.Element {\n    const [visible, setVisible] = React.useState<boolean>(false);\n    function editCourse():void{\n        //console.log(\"set visible \", course);\n        setVisible(true);\n    }\n\n    function removeCourse():void{\n        //probably want to put a \"Are You Sure?\" warning here\n        let newCourses:Class[] = [];\n        for (let index = 0; index < currCourses.length; index++) {\n            if(currCourses[index].id == course.id){\n                continue;\n            }else{\n                newCourses = newCourses.concat(currCourses[index]);\n            }\n        }\n        setCurrCourses(newCourses);\n    }\n    //console.log(\"in Course\");\n    //console.log(course.id);\n    return (\n        <Row>\n            <Col>\n                <button className=\"removeCourse\" onClick={removeCourse} margin-top={\"0.2em\"} margin-bottom=\"0.2em\">\n                    <img src={x} alt=\"Remove Course Button\"/>\n                </button>\n            </Col>\n            <Col>{course.id}</Col>\n            <Col>{course.name}</Col>\n            <Col>{course.description}</Col>\n            <Col>{course.credits}</Col>\n            <Col><button onClick={editCourse}>Edit</button></Col>\n            <EditCourseModal ogClass={course} currClasses={currCourses} setCurrCourse={setCurrCourses} visible={visible} setVisible={setVisible}></EditCourseModal>\n        </Row>\n\n            \n    );\n}\n\nexport default Course;","import React from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\n\nexport function EditSemesterModal({classYear, season, visible, setClassYear, setSeason, setVisible}: \n    {classYear: string, season: string, visible: boolean, setClassYear: (s: string) => void, setSeason: (s: string) => void, setVisible: (b: boolean) => void}): JSX.Element {\n    \n    /* function saveEdit(){\n        \n    } */\n\n    const hide = () => setVisible(false);\n    \n    return (\n        <Modal show={visible} onHide={hide}>\n            <Modal.Header>\n                <Modal.Title>Edit Course</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form>\n                    <Form.Group>\n                        <Form.Label data-testid = \"ClassYear\">Course ID</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={classYear} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setClassYear(ev.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"Season\">Course Name</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={season} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setSeason(ev.target.value)}> </Form.Control>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={hide}>Edit Course</Button>\n                <Button variant=\"secondary\" onClick={hide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\n//<Button variant=\"primary\" onClick={saveEdit}>Edit Course</Button>","import React from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { Class } from \"../interfaces/course\";\n\nexport function AddCourseModal({currClasses, visible, setVisible, setCurrCourse} :\n    {currClasses:Class[], visible: boolean, setVisible: (b: boolean) => void, setCurrCourse: (c:Class[]) => void }) : JSX.Element {\n    const [courseId, setCourseId] = React.useState<string>(\"Course ID\");\n    const [courseName, setCourseName] = React.useState<string>(\"Course Name\");\n    const [courseDesc, setCourseDesc] = React.useState<string>(\"Course Description\");\n    const [courseCred, setCourseCred] = React.useState<number>(0);\n    const [coursePreR, setCoursePreR] = React.useState<string>(\"Course Prerequisite IDs\");\n\n\n    function saveAdd() {\n        const newClasses:Class[] = [...currClasses];\n        const newClass:Class = {\"id\":courseId,\"name\":courseName, \"description\":courseDesc, \"credits\":courseCred, \"prereqs\":coursePreR};\n        //console.log(\"Length of newClasses:\", newClasses.length);\n        setCurrCourse(newClasses.concat(newClass));\n        setVisible(false);\n    }\n    //console.log(\"Modal Course: \", ogClass.id);\n\n    const hide = () => setVisible(false);\n\n    return (\n        <Modal show={visible} onHide={hide}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add Course</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseId\">Course ID</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseId} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseId(ev.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseName\">Course Name</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseName} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseName(ev.target.value)}> </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseDesc\">Course Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseDesc} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseDesc(ev.target.value)}> </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CourseCred\">Course Credits</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={courseCred} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseCred(Number(ev.target.value))}> </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label data-testid = \"CoursePreR\">Course Pre Requisits</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} \n                            value={coursePreR} onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCoursePreR(ev.target.value)}> </Form.Control>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={hide}>Close</Button>\n                <Button variant=\"primary\" onClick={saveAdd}>Add Course</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n\n}\n","import React from \"react\";\nimport \"../App.css\";\nimport { Button, Card as BootstrapCard, Col, Row } from \"react-bootstrap\";\nimport { Class } from \"../interfaces/course\";\nimport Course from \"./Course\";\nimport { EditSemesterModal } from \"./EditSemesterModal\";\nimport { AddCourseModal } from \"./AddCourseModal\";\n\n\n\nexport function Semester(): JSX.Element {\n    //console.log(\"in Semester\");\n    const nullClasses:Class[] =[ {id:\"CISC275\", name:\"Intro to Software Engineering\", description:\"Course1\", credits:3, prereqs:\"None\"},\n        {id:\"CISC106\", name:\"Intro to Computer Engineering\", description:\"Course2\", credits:3, prereqs:\"None\"},\n        {id:\"PHYS207\", name:\"Fundamentals of Physics 1\", description:\"Probably the best course at UD\", credits:4, prereqs:\"None\"},\n        {id:\"MATH241\", name:\"Calculus 1\", description:\"What's a derivative?\", credits:4, prereqs:\"None\"}\n    ];\n  \n    const [addCourseVisible, setAddCourseVisible] = React.useState<boolean>(false);\n    const [classYear,setClassYear] = React.useState<string>(\"____ Year\");\n    const [season,setSeason] = React.useState<string>(\"____ Semester\");\n    const [currClasses, setCurrClasses] = React.useState<Class[]>(nullClasses);\n    const [visible, setVisible] = React.useState<boolean>(false);\n\n    function editCard() {\n        setVisible(true);\n    }\n\n    function addCourse() : void {\n        setAddCourseVisible(true);\n    }\n\n    return <BootstrapCard className=\"border-dark\">\n        <Col>\n            <div className=\"semester-title\">\n                <strong>{classYear}: {season} <button onClick={editCard}>Edit Semester</button></strong>\n                <EditSemesterModal classYear={classYear} season={season} setClassYear={setClassYear} setSeason = {setSeason} visible={visible} setVisible={setVisible}></EditSemesterModal>\n            </div>\n            <Row>\n                <Col><strong>Remove Course</strong></Col>\n                <Col><strong>Course ID</strong></Col>\n                <Col><strong>Course Name</strong></Col>\n                <Col><strong>Description</strong></Col>\n                <Col><strong>Credits</strong></Col>\n                <Col><strong>Edit Course</strong></Col>\n            </Row>\n\n            {currClasses.map(c => {\n                return (\n                    <Row key = {c.id}>\n                        <Course course={c} currCourses={currClasses} setCurrCourses={setCurrClasses}></Course>\n                    </Row>\n                );\n            })\n            }\n            <p></p>\n            <Button className=\"addCourse\" onClick={addCourse}>Add New Course</Button>\n            <AddCourseModal currClasses={currClasses} visible={addCourseVisible} setVisible={setAddCourseVisible} setCurrCourse={setCurrClasses}></AddCourseModal>\n        </Col>\n    </BootstrapCard>;\n}\n\nexport default Semester;\n","import React, { useState } from \"react\";\nimport { Alert,Button } from \"react-bootstrap\";\nimport \"../App.css\";\n\n\n\nfunction WelcomeMsg(): JSX.Element {\n    const [displayWelcome, setDisplayWelcome] = useState(true);\n\n    return (\n\n        <Alert show={displayWelcome} className=\"Welcome container pt-5\">\n                \n            <p><b>Hi, welcome to the UD Computer Science degree planner!</b></p>\n            <p>Add desired courses and semesters</p>\n                \n\n            <hr/>\n\n            <Button onClick={()=>setDisplayWelcome(false)}>\n                    Close and start scheduling\n            </Button>\n\n        </Alert>\n\n                \n    );\n}\n\nexport default WelcomeMsg;","import React from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Semester from \"./components/Semester\";\nimport { sem } from \"./interfaces/sem\";\nimport WelcomeMsg from \"./components/WelcomeMsg\";\n\nfunction App(): JSX.Element {\n    const [classYear,setClassYear] = React.useState<string>(\"Freshman\");\n    const [season,setSeason] = React.useState<string>(\"Fall\");\n    const [semesterCnt,setSemesterCnt] = React.useState<number>(1);\n    const [currSemesters,setCurrSemesters] = React.useState<sem[]>([{cnt: semesterCnt,year: classYear,season: season}]);\n\n    function addSemester() {\n        let newSeason = season;\n        let newYear = classYear;\n        switch (season) {\n        case \"Fall\":\n            setSeason(\"Spring\");\n            newSeason = \"Spring\";\n            break;\n        case \"Spring\":\n            setSeason(\"Fall\");\n            newSeason = \"Fall\";\n            switch (classYear) {\n            case \"Freshman\":\n                setClassYear(\"Sophmore\");  \n                newYear = \"Sophmore\";\n                break;\n            case \"Sophmore\":\n                setClassYear(\"Junior\");\n                newYear = \"Junior\";\n                break;\n            case \"Junior\":\n                setClassYear(\"Senior\");\n                newYear = \"Senior\";\n                break; \n            case \"Senior\":\n                break;\n            }\n        } \n        const newSem:sem[] = [{cnt: semesterCnt+1,year: newYear,season: newSeason}];\n        setSemesterCnt(semesterCnt+1);\n        setCurrSemesters(currSemesters.concat(newSem));   \n    }\n\n    function clearSemesters() {\n        const firstSem:sem[] = [{cnt: 1,year: \"Freshman\",season: \"Fall\"}];\n        setClassYear(\"Freshman\");\n        setCurrSemesters(firstSem);\n        setSeason(\"Fall\");\n        setSemesterCnt(1);\n    }\n\n    function rmSemester() {\n        if (semesterCnt === 1) {\n            return;\n        }\n        const semPop:sem[] = currSemesters;\n        semPop.pop();\n        setCurrSemesters(semPop);\n        setClassYear(semPop[semPop.length-1].year);\n        setSeason(semPop[semPop.length-1].season);\n        setSemesterCnt(semPop[semPop.length-1].cnt);\n    }\n\n    return (\n        <div className=\"App\">\n            <WelcomeMsg></WelcomeMsg>\n            <div>UD CIS Scheduler</div>\n            <Button className=\"semesterControls\" onClick={addSemester}>Add Semester</Button>\n            <Button className=\"semesterControls\" onClick={clearSemesters}>Clear Semesters</Button>\n            <Button className=\"semesterControls\" onClick={rmSemester}>Remove Semester</Button>\n            <Row>\n                <Col id=\"FallSemesters\">\n                    {currSemesters.map(s=>{\n                        if (s.season === \"Fall\") {\n                            const semID = \"semester\" + s.cnt;\n                            return(\n                                <Semester key = {semID}></Semester>\n                            );\n                        }\n                    })}\n                </Col>\n                <Col id=\"SpringSemesters\">\n                    {currSemesters.map(s=>{\n                        if (s.season === \"Spring\") {\n                            const semID = \"semester\" + s.cnt;\n                            return(\n                                <Semester key = {semID}></Semester>\n                            );\n                        }\n                    })}\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\n//classYear={s.year} season={s.season}\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n<link\n    rel=\"stylesheet\"\n    href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\"\n    integrity=\"sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU\"\n    crossOrigin=\"anonymous\"\n/>;\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}