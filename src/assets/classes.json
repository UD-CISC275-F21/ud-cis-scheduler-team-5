[
    {
        "Course ID": "CISC108",
        "Course Name": "Introduction to Computer Science I",
        "Description": "Computing and principles of programming with an emphasis on systematic program design. Topics include functional programming, data abstraction, procedural abstraction, use of control and state, recursion, testing, and object-oriented programming concepts. Requires no prior programming experience, open to any major, but intended primarily for majors and minors in computer science or mathematics.",
        "Credits": 3
    },
    {
        "Course ID": "CISC181",
        "Course Name":"Introduction to Computer Science II",
        "Description": "Principles of computer science illustrated and applied through programming in an object oriented language. Programming projects illustrate computational problems, styles and issues that arise in computer systems development and in all application areas of computation.",
        "Credits": 3
    },
    {
        "Course ID": "CISC210",
        "Course Name": "Introduction to Systems Programming",
        "Description": "Principles of computer systems programming for software and hardware platforms to achieve efficient resource usage. Topics include the C programming language, memory management, and awareness of system constraints and interfacing. Projects include programming embedded systems and interactive objects.",
        "Credits": 3
    },
    {
        "Course ID": "CISC220",
        "Course Name": "Data Structures",
        "Description": "Review of data type abstraction, recursion, arrays, stacks, queues, multiple stacks and linked lists. Emphasis on dynamic storage management, garbage collection, trees, graphs, tables, sorting and searching.",
        "Credits": 3
    },
    {
        "Course ID": "CISC260",
        "Course Name": "Machine Organization and Assembly Language",
        "Description": "Introduction to the basics of machine organization. Programming tools and techniques at the machine and assembly levels. Assembly language programming and computer arithmetic techniques.",
        "Credits": 3
    },
    {
        "Course ID": "CISC275",
        "Course Name": "Introduction to Software Engineering",
        "Description": "Object oriented software design and development through use of an object oriented programming language. Topics include team programming, design patterns, graphical user interfaces, software engineering tools (e.g., integrated development environments, version control, build management, bug tracking, automated testing).",
        "Credits": 3
    },
    {
        "Course ID": "CISC303",
        "Course Name": "Automata Theory",
        "Description": "Automata and formal language theory. Background for advanced applications in compilers, computer networks, operating systems, and natural language processing. Finite automata and regular languages. Push down automata and context free grammars. Turing machines.",
        "Credits": 3
    },
    {
        "Course ID": "CISC320",
        "Course Name": "Introduction to Algorithms",
        "Description": "Design and analysis of algorithms: worst/average case analysis, proofs for correctness and performance of algorithms. Algorithmic strategies (divide and conquer, greedy methods, dynamic programming, etc.). Algorithms for searching, forming and traversal of strings, trees and graphs. Categorization of computational problems: classes P and NP. NP completeness.",
        "Credits": 3
    },
    {
        "Course ID": "CISC361",
        "Course Name": "Operating Systems",
        "Description": "Principles and techniques employed in the development of operating systems and their control programs. Includes management of memory, processors, I/O devices.",
        "Credits": 3
    },
    {
        "Course ID": "CISC372",
        "Course Name": "Parallel Computing",
        "Description": "Introduction to parallel computing concepts, methodologies, and tools. Programming and algorithmic techniques for code that will run simultaneously on parallel computing architectures. Topics include: single and multi-core parallelism, shared and distributed memory architectures, concurrency, program decomposition, data distribution, communication, load balancing, scalability, locality, granularity, debugging, performance evaluation.",
        "Credits": 3
    }, 
    {
        "Course ID": "MATH210",
        "Course Name": "Discrete Mathematics I",
        "Description": "Elements of sets and logic. Relations, functions. Integers. Induction and recursion. Principles and techniques of counting. Graphs. Paths and circuits",
        "Credits": 3
    },
    {
        "Course ID": "MATH241",
        "Course Name": "Analytic Geometry and Calculus A",
        "Description": "Functions, limits, continuity, derivatives. Polynomial, rational, exponential, hyperbolic, logarithmic, trigonometric and inverse trigonometric functions. Definite and indefinite integrals and the Fundamental Theorem of Calculus. Simple differential equations (separable ODE, linear ODE). ODE models leading to exponential growth and decay.",
        "Credits": 4
    },
    {
        "Course ID": "MATH242",
        "Course Name": "Analytic Geometry and Calculus B",
        "Description": "Brief review of MATH 241; evaluation of limits by L’Hospital’s rule; applications of integration; integration techniques; parametric curves; polar coordinates; infinite sequences and series. Includes use of computers to perform symbolic, numerical and graphical analysis.",
        "Credits": 4
    },
    {
        "Course ID": "MATH205",
        "Course Name": "Statistical Methods",
        "Description": "Descriptive statistics, graphical displays, sampling, variation, normal distribution, estimation, hypothesis testing, one-way analysis of variance, simple linear regression and goodness of fit. Laboratory covers use of statistical packages on mainframe and microcomputers.",
        "Credits": 4
    },
    {
        "Course ID": "MATH350",
        "Course Name": "Probability Theory and Simulation Methods",
        "Description": "Introduces the basic theory of discrete and continuous aspects of probability theory. Topics include bivariate distributions, sums of independent random variables, moment generating functions, laws of large numbers and central limit theorem.",
        "Credits": 3
    },
    {
        "Course ID": "CISC355",
        "Course Name": "Computers, Ethics, and Society",
        "Description": "Explains relationships among information technology, society and ethics by examining issues raised by increasingly widespread use of computers. Topics include ethics for computer professionals, computer impact on factory work, office work, personal privacy and social power distribution.",
        "Credits": 3
    },
    {
        "Course ID": "ENGL312",
        "Course Name": "Written Communications in Business",
        "Description": "Examines the role of written communication in corporate decision making. Students write memos, letters, proposals and reports that simulate on-the-job communication tasks, and are encouraged to use materials from their fields of specialization.",
        "Credits": 3
    },
    {
        "Course ID": "ENGL410",
        "Course Name": "Technical Writing",
        "Description": "Selected problems in technical communications, the preparation of reports and technical editing.",
        "Credits": 3
    },
    {
        "Course ID": "CISC304",
        "Course Name": "Logic for Programming",
        "Description": "Propositional and predicate logic for general reasoning and advanced applications in knowledge representation in artificial intelligence and database, program correctness and programming semantics. Models, resolution, logic programming, and natural deduction.",
        "Credits": 3
    },
    {
        "Course ID": "MATH349",
        "Course Name": "Elementary Linear Algebra",
        "Description": "Systems of linear equations, linear combinations of vectors, and matrix algebra. Determinants, eigenvalues and eigenvectors, similarity and diagonalization of square matrices. Vector spaces, linear dependence and independence, basis and dimension, linear transformations. Inner product spaces, orthogonality, orthogonal projections, fundamental subspaces. A software package may be used for the analysis and solution of linear algebra problems.",
        "Credits": 3
    },
    {
        "Course ID": "CISC498",
        "Course Name": "Computer Science Senior Design Project I",
        "Description": "First semester of two-semester senior software design course.  Students work in teams to develop solutions to real-world problems for a client.  Application of a modern software engineering process; requirement solicitation, analysis, and specification; prototyping; design; incremental development; testing and verification; client interaction; and presentation. Offered in Fall only.",
        "Credits": 3
    },
    {
        "Course ID": "CISC499",
        "Course Name": "Computer Science Senior Design Project II",
        "Description": "Continuation of CISC498",
        "Credits": 3
    }
]